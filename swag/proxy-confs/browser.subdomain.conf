server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    server_name browser.*;

    include /config/nginx/ssl.conf;

    client_max_body_size 0;

    # enable for ldap auth (requires ldap-lite package)
    #include /config/nginx/ldap.conf;

    # enable for Authelia (requires authelia package)
    #include /config/nginx/authelia.conf;

    # enable for 2FA (requires ldap-lite package)
    #include /config/nginx/2fa.conf;

    # enable for fail2ban (requires fail2ban package)
    #include /config/nginx/fail2ban.conf;

    # enable for geo blocking (requires geoip2 package)
    #include /config/nginx/geoip.conf;

    # enable for caching (requires redis package)
    #include /config/nginx/cache.conf;

    # enable for rate limiting (requires redis package)
    #include /config/nginx/rate-limit.conf;

    # enable for security headers
    include /config/nginx/security.conf;

    # enable for gzip compression
    include /config/nginx/gzip.conf;

    # Main API endpoints
    location /api/ {
        include /config/nginx/proxy.conf;
        resolver 127.0.0.11 valid=30s;
        set $upstream_backend backend:5000;
        proxy_pass http://$upstream_backend;
    }

    # Session proxy for Chromium containers
    location /session/ {
        include /config/nginx/proxy.conf;
        resolver 127.0.0.11 valid=30s;
        set $upstream_backend backend:5000;
        proxy_pass http://$upstream_backend;
        
        # WebSocket support for VNC
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Timeout settings for long-running sessions
        proxy_read_timeout 86400s;
        proxy_send_timeout 86400s;
        proxy_connect_timeout 60s;
        
        # Buffer settings for streaming
        proxy_buffering off;
        proxy_request_buffering off;
    }

    # Health check endpoint
    location /health {
        include /config/nginx/proxy.conf;
        resolver 127.0.0.11 valid=30s;
        set $upstream_backend backend:5000;
        proxy_pass http://$upstream_backend;
    }

    # Root endpoint
    location / {
        include /config/nginx/proxy.conf;
        resolver 127.0.0.11 valid=30s;
        set $upstream_backend backend:5000;
        proxy_pass http://$upstream_backend;
    }
} 